name: build and deploy

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

defaults:
  run:
    shell: bash

# Declare default permissions as read only.
permissions: write-all

env:
  NODE_ENV: production
  NODE_VERSION: 18
  APP_NAME: flutter_website
  RELEASE_VERSION: '' # Just for silent github-action lint
  JEKYLL_BUILD_DIR: _site

jobs:
  build-gh-pages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Patch jekyll config
        run: |
          echo "baseurl: /flutter_website" >> _config.yml
          cat _config.yml
      - name: Build site and check links
        run: make build
      - name: check jekyll build files on ${{env.JEKYLL_BUILD_DIR}}
        run: |
          ls -la ${{env.JEKYLL_BUILD_DIR}}
      - name: Deploy to GitHub Pages ðŸš€
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          publish_dir: ${{env.JEKYLL_BUILD_DIR}}

  build-static-website:
    runs-on: ubuntu-latest
    steps:
      - name: set version env
        run: |
          GITHUB_REF_NAME=${{github.ref_name}}
          echo "RELEASE_VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
          echo "set env.RELEASE_VERSION to ${GITHUB_REF_NAME#v}"
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build site and check links
        run: make build
      - name: check jekyll build files on ${{env.JEKYLL_BUILD_DIR}}
        run: |
          ls -la ${{env.JEKYLL_BUILD_DIR}}
      - name: Prepare build files achive
        run: |
          7z a -tzip ${{env.APP_NAME}}-${{env.RELEASE_VERSION}}-staticfiles.zip -r ./${{env.JEKYLL_BUILD_DIR}}/*
      - uses: actions/upload-artifact@v2
        with:
          name: ${{env.APP_NAME}}-${{env.RELEASE_VERSION}}-staticfiles.zip
          path: ${{env.APP_NAME}}-${{env.RELEASE_VERSION}}-staticfiles.zip
      - name: 'Publish build files achive to release'
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          file: ${{env.APP_NAME}}-${{env.RELEASE_VERSION}}-staticfiles.zip
          tags: true
          draft: false
          overwrite: true
          
  build-native-executable:
    name: 'Build native executable'
    needs: [build-static-website]
    if: contains(github.ref, 'tags')
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{matrix.platform}}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          submodules: false
      - name: set version env
        run: |
          GITHUB_REF_NAME=${{github.ref_name}}
          echo "RELEASE_VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
          echo "set env.RELEASE_VERSION to ${GITHUB_REF_NAME#v}"
      - name: generate/overwrite package.json
        run: |
          # # generate/overwrite package.json
          # cat <<- EOF > package.json
          # {
          #   "name": "${{env.APP_NAME}}",
          #   "version": "${{env.RELEASE_VERSION}}"
          # }
          # EOF
          # # npm --no-git-tag-version version -f ${{env.RELEASE_VERSION}}
          # cat package.json
          cat <<- EOF > custom-config.json
          {"package":{"productName":"${{env.APP_NAME}}", "version":"${{env.RELEASE_VERSION}}"}, "build":{"distDir":"../${{env.JEKYLL_BUILD_DIR}}", "beforeBuildCommand":""}}
          EOF
          cat custom-config.json
      - uses: actions/download-artifact@v2
        with:
          name: ${{env.APP_NAME}}-${{env.RELEASE_VERSION}}-staticfiles.zip
      - name: Extract ${{env.APP_NAME}}-${{env.RELEASE_VERSION}}-staticfiles.zip
        run: |
          rm -rf ${{env.JEKYLL_BUILD_DIR}}
          unzip ${{env.APP_NAME}}-${{env.RELEASE_VERSION}}-staticfiles.zip -d ${{env.JEKYLL_BUILD_DIR}}
      - name: Display structure of ${{env.JEKYLL_BUILD_DIR}}
        run: ls -la . ${{env.JEKYLL_BUILD_DIR}}
      - name: setup Node.js ${{env.NODE_VERSION}}
        uses: actions/setup-node@v2
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
      - name: setup Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf 
      - uses: liudonghua123/tauri-action@dev
        name: package and deploy app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          distPath: ${{env.JEKYLL_BUILD_DIR}}
          tagName: ${{github.ref_name}}
          releaseName: ${{github.ref_name}}
          releaseBody: "See the assets to download this version and install."
          bundleIdentifier: dev.flutter.site
          args: -c custom-config.json
          releaseDraft: false
          prerelease: false
          productName: ${{env.APP_NAME}}
          version: ${{env.RELEASE_VERSION}}
